# =================================================================================
# Set the number of dimensions (2 or 3 for a 2D or 3D calculation)
# =================================================================================
set Number of dimensions = 2

# =================================================================================
# Set the length of the domain in all three dimensions
# (Domain size Z ignored in 2D)
# =================================================================================
# Each axes spans from zero to the specified length
set Domain size X = 5.0
set Domain size Y = 5.0
set Domain size Z = 5.0

# =================================================================================
# Set the element parameters
# =================================================================================
# The number of elements in each direction is 2^(refineFactor) * subdivisions
# Subdivisions Z ignored in 2D
# For optimal performance, use refineFactor primarily to determine the element size
set Subdivisions X = 1
set Subdivisions Y = 1
set Subdivisions Z = 1

set Refine factor = 8

# Set the polynomial degree of the element (allowed values: 1, 2, or 3)
set Element degree = 1

# =================================================================================
# Set the adaptive mesh refinement parameters
# =================================================================================
# Set the flag determining if adaptive meshing is activated
set Mesh adaptivity = false

# Set the maximum and minimum level of refinement
# When adaptive meshing is enabled, the refine factor set in the block above is
# only used to generate the first pass of the mesh as the initial conditions are
# applied. It should be set somewhere between the max and min levels below.
set Max refinement level = 8
set Min refinement level = 7

subsection Refinement criterion: n0
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = VALUE
# Set the lower and upper bounds for the value-based refinement window
set Value lower bound = 0.001
set Value upper bound = 0.999
end
subsection Refinement criterion: n1
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = VALUE
# Set the lower and upper bounds for the value-based refinement window
set Value lower bound = 0.001
set Value upper bound = 0.999
end
subsection Refinement criterion: n2
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = VALUE
# Set the lower and upper bounds for the value-based refinement window
set Value lower bound = 0.001
set Value upper bound = 0.999
end
subsection Refinement criterion: n3
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = VALUE
# Set the lower and upper bounds for the value-based refinement window
set Value lower bound = 0.001
set Value upper bound = 0.999
end
subsection Refinement criterion: n4
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = VALUE
# Set the lower and upper bounds for the value-based refinement window
set Value lower bound = 0.001
set Value upper bound = 0.999
end
subsection Refinement criterion: n5
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = VALUE
# Set the lower and upper bounds for the value-based refinement window
set Value lower bound = 0.001
set Value upper bound = 0.999
end
subsection Refinement criterion: n6
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = VALUE
# Set the lower and upper bounds for the value-based refinement window
set Value lower bound = 0.001
set Value upper bound = 0.999
end
subsection Refinement criterion: n7
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = VALUE
# Set the lower and upper bounds for the value-based refinement window
set Value lower bound = 0.001
set Value upper bound = 0.999
end
subsection Refinement criterion: n8
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = VALUE
# Set the lower and upper bounds for the value-based refinement window
set Value lower bound = 0.001
set Value upper bound = 0.999
end
subsection Refinement criterion: n9
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = VALUE
# Set the lower and upper bounds for the value-based refinement window
set Value lower bound = 0.001
set Value upper bound = 0.999
end
subsection Refinement criterion: n10
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = VALUE
# Set the lower and upper bounds for the value-based refinement window
set Value lower bound = 0.001
set Value upper bound = 0.999
end
subsection Refinement criterion: n11
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = VALUE
# Set the lower and upper bounds for the value-based refinement window
set Value lower bound = 0.001
set Value upper bound = 0.999
end
subsection Refinement criterion: n12
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = VALUE
# Set the lower and upper bounds for the value-based refinement window
set Value lower bound = 0.001
set Value upper bound = 0.999
end
subsection Refinement criterion: n13
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = VALUE
# Set the lower and upper bounds for the value-based refinement window
set Value lower bound = 0.001
set Value upper bound = 0.999
end
subsection Refinement criterion: n14
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = VALUE
# Set the lower and upper bounds for the value-based refinement window
set Value lower bound = 0.001
set Value upper bound = 0.999
end
subsection Refinement criterion: n15
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = VALUE
# Set the lower and upper bounds for the value-based refinement window
set Value lower bound = 0.001
set Value upper bound = 0.999
end
subsection Refinement criterion: n16
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = VALUE
# Set the lower and upper bounds for the value-based refinement window
set Value lower bound = 0.001
set Value upper bound = 0.999
end
subsection Refinement criterion: n17
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = VALUE
# Set the lower and upper bounds for the value-based refinement window
set Value lower bound = 0.001
set Value upper bound = 0.999
end
subsection Refinement criterion: n18
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = VALUE
# Set the lower and upper bounds for the value-based refinement window
set Value lower bound = 0.001
set Value upper bound = 0.999
end
subsection Refinement criterion: n19
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = VALUE
# Set the lower and upper bounds for the value-based refinement window
set Value lower bound = 0.001
set Value upper bound = 0.999
end
subsection Refinement criterion: n20
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = VALUE
# Set the lower and upper bounds for the value-based refinement window
set Value lower bound = 0.001
set Value upper bound = 0.999
end
subsection Refinement criterion: n21
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = VALUE
# Set the lower and upper bounds for the value-based refinement window
set Value lower bound = 0.001
set Value upper bound = 0.999
end
subsection Refinement criterion: n22
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = VALUE
# Set the lower and upper bounds for the value-based refinement window
set Value lower bound = 0.001
set Value upper bound = 0.999
end
subsection Refinement criterion: n23
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = VALUE
# Set the lower and upper bounds for the value-based refinement window
set Value lower bound = 0.001
set Value upper bound = 0.999
end
subsection Refinement criterion: n24
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = VALUE
# Set the lower and upper bounds for the value-based refinement window
set Value lower bound = 0.001
set Value upper bound = 0.999
end
subsection Refinement criterion: rho0
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = GRADIENT
# Set the lower and upper bounds for the value-based refinement window
set Gradient magnitude lower bound = 1.5
# set Value upper bound = 0.999e13
end
subsection Refinement criterion: rho1
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = GRADIENT
# Set the lower and upper bounds for the value-based refinement window
set Gradient magnitude lower bound = 1.5
# set Value upper bound = 0.999e13
end
subsection Refinement criterion: rho2
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = GRADIENT
# Set the lower and upper bounds for the value-based refinement window
set Gradient magnitude lower bound = 1.5
# set Value upper bound = 0.999e13
end
subsection Refinement criterion: rho3
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = GRADIENT
# Set the lower and upper bounds for the value-based refinement window
set Gradient magnitude lower bound = 1.5
# set Value upper bound = 0.999e13
end
subsection Refinement criterion: rho4
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = GRADIENT
# Set the lower and upper bounds for the value-based refinement window
set Gradient magnitude lower bound = 1.5
# set Value upper bound = 0.999e13
end
subsection Refinement criterion: rho5
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = GRADIENT
# Set the lower and upper bounds for the value-based refinement window
set Gradient magnitude lower bound = 1.5
# set Value upper bound = 0.999e13
end
subsection Refinement criterion: rho6
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = GRADIENT
# Set the lower and upper bounds for the value-based refinement window
set Gradient magnitude lower bound = 1.5
# set Value upper bound = 0.999e13
end
subsection Refinement criterion: rho7
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = GRADIENT
# Set the lower and upper bounds for the value-based refinement window
set Gradient magnitude lower bound = 1.5
# set Value upper bound = 0.999e13
end
subsection Refinement criterion: rho8
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = GRADIENT
# Set the lower and upper bounds for the value-based refinement window
set Gradient magnitude lower bound = 1.5
# set Value upper bound = 0.999e13
end
subsection Refinement criterion: rho9
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = GRADIENT
# Set the lower and upper bounds for the value-based refinement window
set Gradient magnitude lower bound = 1.5
# set Value upper bound = 0.999e13
end
subsection Refinement criterion: rho10
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = GRADIENT
# Set the lower and upper bounds for the value-based refinement window
set Gradient magnitude lower bound = 1.5
# set Value upper bound = 0.999e13
end
subsection Refinement criterion: rho11
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = GRADIENT
# Set the lower and upper bounds for the value-based refinement window
set Gradient magnitude lower bound = 1.5
# set Value upper bound = 0.999e13
end
subsection Refinement criterion: rho12
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = GRADIENT
# Set the lower and upper bounds for the value-based refinement window
set Gradient magnitude lower bound = 1.5
# set Value upper bound = 0.999e13
end
subsection Refinement criterion: rho13
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = GRADIENT
# Set the lower and upper bounds for the value-based refinement window
set Gradient magnitude lower bound = 1.5
# set Value upper bound = 0.999e13
end
subsection Refinement criterion: rho14
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = GRADIENT
# Set the lower and upper bounds for the value-based refinement window
set Gradient magnitude lower bound = 1.5
# set Value upper bound = 0.999e13
end
subsection Refinement criterion: rho15
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = GRADIENT
# Set the lower and upper bounds for the value-based refinement window
set Gradient magnitude lower bound = 1.5
# set Value upper bound = 0.999e13
end
subsection Refinement criterion: rho16
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = GRADIENT
# Set the lower and upper bounds for the value-based refinement window
set Gradient magnitude lower bound = 1.5
# set Value upper bound = 0.999e13
end
subsection Refinement criterion: rho17
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = GRADIENT
# Set the lower and upper bounds for the value-based refinement window
set Gradient magnitude lower bound = 1.5
# set Value upper bound = 0.999e13
end
subsection Refinement criterion: rho18
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = GRADIENT
# Set the lower and upper bounds for the value-based refinement window
set Gradient magnitude lower bound = 1.5
# set Value upper bound = 0.999e13
end
subsection Refinement criterion: rho19
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = GRADIENT
# Set the lower and upper bounds for the value-based refinement window
set Gradient magnitude lower bound = 1.5
# set Value upper bound = 0.999e13
end
subsection Refinement criterion: rho20
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = GRADIENT
# Set the lower and upper bounds for the value-based refinement window
set Gradient magnitude lower bound = 1.5
# set Value upper bound = 0.999e13
end
subsection Refinement criterion: rho21
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = GRADIENT
# Set the lower and upper bounds for the value-based refinement window
set Gradient magnitude lower bound = 1.5
# set Value upper bound = 0.999e13
end
subsection Refinement criterion: rho22
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = GRADIENT
# Set the lower and upper bounds for the value-based refinement window
set Gradient magnitude lower bound = 1.5
# set Value upper bound = 0.999e13
end
subsection Refinement criterion: rho23
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = GRADIENT
# Set the lower and upper bounds for the value-based refinement window
set Gradient magnitude lower bound = 1.5
# set Value upper bound = 0.999e13
end
subsection Refinement criterion: rho24
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = GRADIENT
# Set the lower and upper bounds for the value-based refinement window
set Gradient magnitude lower bound = 1.5
# set Value upper bound = 0.999e13
end
subsection Refinement criterion: rho
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = GRADIENT
# Set the lower and upper bounds for the value-based refinement window
set Gradient magnitude lower bound = 0.001
#set Gradient upper bound = 0.999e13
end

# Set the number of time steps between remeshing operations
set Steps between remeshing operations = 40

# =================================================================================
# Set the time step parameters
# =================================================================================
# The size of the time step
set Time step = 0.025

# The simulation ends when either the number of time steps is reached or the
# simulation time is reached.
set Number of time steps = 50000

# =================================================================================
# Set the output parameters
# =================================================================================
# Type of spacing between outputs ("EQUAL_SPACING", "LOG_SPACING", "N_PER_DECADE",
# or "LIST")
set Output condition = EQUAL_SPACING

# Number of times the program outputs the fields (total number for "EQUAL_SPACING"
# and "LOG_SPACING", number per decade for "N_PER_DECADE", ignored for "LIST")
set Number of outputs = 500

# The number of time steps between updates being printed to the screen
set Skip print steps = 100

set Number of checkpoints = 0
# =================================================================================
# Set the grain reassignment parameters
# =================================================================================

#set Activate grain reassignment = false
#set Order parameter fields for grain reassignment = n0, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24
#set Time steps between grain reassignments = 2000
#set Order parameter cutoff for grain identification = 1e-2
#set Buffer between grains before reassignment = 2.0
#
#set Load grain structure = false
#set Grain structure filename =  64_grain_2D_US
#set Grain structure variable name = FeatureIds
#set Number of smoothing cycles after grain structure loading = 0
#set Minimum radius for loaded grains = 0.1

# =================================================================================
# Set the boundary conditions
# =================================================================================
# Set the boundary condition for each variable, where each variable is given by
# its name, as defined in equations.h. The four boundary condition
# types are NATURAL, DIRICHLET, NON_UNIFORM_DIRICHLET and PERIODIC. If all
# of the boundaries have the same boundary condition, only one boundary condition
# type needs to be given. If multiple boundary condition types are needed, give a
# comma-separated list of the types. The order is the miniumum of x, maximum of x,
# minimum of y, maximum of y, minimum of z, maximum of z (i.e left, right, bottom,
# top in 2D and left, right, bottom, top, front, back in 3D). The value of a
# Dirichlet BC is specfied in the following way -- DIRCHILET: val -- where 'val' is
# the desired value. If the boundary condition is NON_UNIFORM_DIRICHLET, the
# boundary condition should be specified in the appropriate function in 'ICs_and_BCs.h'.
# Example 1: All periodic BCs for variable 'c'
# set Boundary condition for variable c = PERIODIC
# Example 2: Zero-derivative BCs on the left and right, Dirichlet BCs with value
# 1.5 on the top and bottom for variable 'n' in 2D
# set Boundary condition for variable n = NATURAL, NATURAL, DIRICHLET: 1.5, DIRICHLET: 1.5

set Boundary condition for variable n0 = PERIODIC
set Boundary condition for variable n1 = PERIODIC
set Boundary condition for variable n2 = PERIODIC
set Boundary condition for variable n3 = PERIODIC
set Boundary condition for variable n4 = PERIODIC
set Boundary condition for variable n5 = PERIODIC
set Boundary condition for variable n6 = PERIODIC
set Boundary condition for variable n7 = PERIODIC
set Boundary condition for variable n8 = PERIODIC
set Boundary condition for variable n9 = PERIODIC
set Boundary condition for variable n10 = PERIODIC
set Boundary condition for variable n11 = PERIODIC
set Boundary condition for variable n12 = PERIODIC
set Boundary condition for variable n13 = PERIODIC
set Boundary condition for variable n14 = PERIODIC
set Boundary condition for variable n15 = PERIODIC
set Boundary condition for variable n16 = PERIODIC
set Boundary condition for variable n17 = PERIODIC
set Boundary condition for variable n18 = PERIODIC
set Boundary condition for variable n19 = PERIODIC
set Boundary condition for variable n20 = PERIODIC
set Boundary condition for variable n21 = PERIODIC
set Boundary condition for variable n22 = PERIODIC
set Boundary condition for variable n23 = PERIODIC
set Boundary condition for variable n24 = PERIODIC

set Boundary condition for variable rho0 = PERIODIC
set Boundary condition for variable rho1 = PERIODIC
set Boundary condition for variable rho2 = PERIODIC
set Boundary condition for variable rho3 = PERIODIC
set Boundary condition for variable rho4 = PERIODIC
set Boundary condition for variable rho5 = PERIODIC
set Boundary condition for variable rho6 = PERIODIC
set Boundary condition for variable rho7 = PERIODIC
set Boundary condition for variable rho8 = PERIODIC
set Boundary condition for variable rho9 = PERIODIC
set Boundary condition for variable rho10 = PERIODIC
set Boundary condition for variable rho11 = PERIODIC
set Boundary condition for variable rho12 = PERIODIC
set Boundary condition for variable rho13 = PERIODIC
set Boundary condition for variable rho14 = PERIODIC
set Boundary condition for variable rho15 = PERIODIC
set Boundary condition for variable rho16 = PERIODIC
set Boundary condition for variable rho17 = PERIODIC
set Boundary condition for variable rho18 = PERIODIC
set Boundary condition for variable rho19 = PERIODIC
set Boundary condition for variable rho20 = PERIODIC
set Boundary condition for variable rho21 = PERIODIC
set Boundary condition for variable rho22 = PERIODIC
set Boundary condition for variable rho23 = PERIODIC
set Boundary condition for variable rho24 = PERIODIC

set Boundary condition for variable rho = PERIODIC


# =================================================================================
# Set the model constants
# =================================================================================
# Set the user-defined model constants, which must have a counter-part given in
# customPDE.h. These are most often used in the residual equations in equations.h,
# but may also be used for initial conditions and nucleation calculations. The type
# options currently are DOUBLE, INT, BOOL, TENSOR, and [symmetry] ELASTIC CONSTANTS
# where [symmetry] is ISOTROPIC, TRANSVERSE, ORTHOTROPIC, or ANISOTROPIC.

#The coefficient for the polynomial terms of the free energy
set Model constant m0 = 1.0, DOUBLE

# The dimensionless mobility, MnV in equations.cc
set Model constant MnV = 1.0, DOUBLE

# Gradient energy coefficient
#set Model constant KnV = 0.1, DOUBLE

# Gradient energy coefficient
set Model constant KnV = 0.00125, DOUBLE

# Grain interaction coeffiecient
set Model constant alpha = 1.5, DOUBLE

# fstored bar ^*
set Model constant fsbs = 0.5, DOUBLE

# boolean using stored: 1=true
set Model constant with_stored = 1.0, DOUBLE

# =================================================================================
# Set the real constants
# =================================================================================

# Shear modulus (J/m^3)
set Model constant G = 28.4e9, DOUBLE

# Burgers vector (m)
set Model constant b = 0.255e-9, DOUBLE

# The grain boundary energy (J/m^2)
set Model constant gamma_gb = 0.595, DOUBLE

# The length scale (m)
set Model constant l0_const = 128.0e-6, DOUBLE

# Internal length scale (gb size)(1)
set Model constant l_int_unitless = 0.1, DOUBLE

# Mean dislocation density (m^-2)
# set Model constant rho_mean = 1.37777e+13, DOUBLE
# set Model constant rho_mean = 1.0, DOUBLE
# set Model constant rho_mean = 1.21e+13, DOUBLE
set Model constant rho_mean = 1.0e+13, DOUBLE

# =================================================================================
# Set the parameters for loading in initial conditions (OPTIONAL)
# =================================================================================
# Specify whether initial conditions should be read in from a *.vtk file, and if
# so, which files to read in for which variables. Each entry takes a comma-separated
# list of values for each variable, given in the order of the indices at the top of
# equations.cc.

# Whether to load intial conditions
set Load initial conditions = true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true

## Whether each processor should read its own file
set Load parallel file = false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
#
## Names of the files to be read without the file extension (assumed to be in the app directory)
#set File names = n0, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, rho0, rho1, rho2, rho3, rho4, rho5, rho6, rho7, rho8, rho9, rho10, rho11, rho12, rho13, rho14, rho15, rho16, rho17, rho18, rho19, rho20, rho21, rho22, rho23, rho24, rho
set File names = ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond, ini_cond
#
## Names of the variables in the file being read (may differ from the model variable names)
set Variable names in the files = n0, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, rho0, rho1, rho2, rho3, rho4, rho5, rho6, rho7, rho8, rho9, rho10, rho11, rho12, rho13, rho14, rho15, rho16, rho17, rho18, rho19, rho20, rho21, rho22, rho23, rho24, rho
